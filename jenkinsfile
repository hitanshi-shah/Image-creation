def INSTANCE_ID=""
pipeline{
  agent any
  environment{
                                action="${params.terraform_action}"
				TF_VAR_subnet_id="${params.subnet_id}"
				TF_VAR_security_group_id="${params.security_group_id}"
				TF_VAR_key_pair="${key_pair}" 
				TF_VAR_region="${params.region}"
				TF_VAR_group="${params.group}"
				TF_VAR_gearID="${params.gearID}"
				TERRAFORM_STATE_FILE = "terraform.tfstate"
  }
  stages {
        stage('Windows VM Provisioning on AWS Cloud') {  
	      steps {
	        dir("./ec2creation") {
	            script {
	              sh 'rm -rf .terraform'
                  sh 'terraform init'
                  sh 'terraform plan -out=tfplan'
                  sh 'terraform $action -auto-approve -lock=false  tfplan'
                  INSTANCE_ID=sh(script: 'terraform output -raw theId', returnStdout: true).trim()
                  echo INSTANCE_ID
	            }
	        }
	        }
        }

		 stage('Image creation from the instance') {    
	      steps {
	        dir("./imagecreation") {
	        script {
	               echo INSTANCE_ID
	               sh 'rm -rf .terraform'
	               sh 'terraform init'
                   sh 'terraform plan -var=theid='+INSTANCE_ID+' -lock=false -out=tfplans'
                   sh 'terraform $action -auto-approve -lock=false tfplans'
	        }
	        }
	        }
        }
  }
}
